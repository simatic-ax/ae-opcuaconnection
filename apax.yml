# General information
name: "water-tank"
version: 0.0.1
author: Siemens AG
type: app
# Description for your application example or app
description: <OPC UA Server Configuration example for a tank simulation>
#URL to the repository
repository:
  type: git
  url: https://github.com/simatic-ax/ae-opcuaconnection
# Targets to be compiled with 'apax build'
targets:
  - "1500"
  - "llvm"

# Registry information, to other npm-registries where Apax packages are located
registries:
  '@simatic-ax': 'https://npm.pkg.github.com/'
# Install settings
installStrategy: strict
apaxVersion: 4.0.0
# Dependencies
dependencies:
  "@ax/simatic-1500-clocks": ^10.0.6
  "@ax/opcua-server-config": ^3.0.0
  "@ax/mon": ^1.7.6
devDependencies:
  "@ax/sdk": 2504.0.0
# Project variables
variables:
  APAX_BUILD_ARGS:
    - --debug # Enable debug information for value debugging 
  BIN_FOLDER: "./bin/1500" # input folder for the loader in the load script. For PLCSIM Advanced it has to be changed to "./bin/plcsim"
  # IP address of the target device, you want to download your application code to
  # Note: For value debugging/monitoring, the IP address in the .vscode/launch.json must also be adapted
  IP_ADDRESS: "192.168.0.1"
  PLC_NAME: "TankPlc"
  HWL_FILE: "hwconfiguration/tankPlc.hwl.yml"

  CERT_PASSWORD: "!S71500"
  MASTER_PASSWORD: "VeryGoodPassword123++"
  USERNAME: "MyUser"
  PASSWORD: "Siemens1!"

# Apax scripts
scripts:
  # call 'apax load' to download the built program to the specified target
  # The variables IP_ADDRESS and BIN_FOLDER above might have to be adapted
  load: apax sld load --target $IP_ADDRESS --restart --accept-security-disclaimer --log debug --certificate ./certificate/reference_x509.crt
  hwcompile: apax hwc compile --input $HWL_FILE  --output "bin/hwcn"
  hwdownload: apax hwld load --input "./bin/hwcn/$PLC_NAME" --target $IP_ADDRESS --master-password $MASTER_PASSWORD --accept-security-disclaimer

  create_certificate:
  - chmod +x certificate/createCertificateViaOpenSSL.sh
  - certificate/createCertificateViaOpenSSL.sh $CERT_PASSWORD
  - echo "Make sure that the CERT_PASSPHRASE variable retains the value that was last used to generate the certificate files when you import certificates later."
  
  setup-hw-certificates:
    - apax hwc setup-secure-communication --module-name $PLC_NAME --input $HWL_FILE --master-password $MASTER_PASSWORD
    - apax hwc import-certificate --module-name $PLC_NAME --input $HWL_FILE --certificate "./certificate/containerWithPublicAndPrivateKeys_x509.p12" --passphrase $CERT_PASSWORD --purpose "TLS"
    - apax hwc import-certificate --module-name $PLC_NAME --input $HWL_FILE --certificate "./certificate/containerWithPublicAndPrivateKeys_x509.p12" --passphrase $CERT_PASSWORD --purpose "OpcUaServer"

  set-password: apax hwc manage-users --module-name $PLC_NAME --input $HWL_FILE  set-password --username $USERNAME --password  $PASSWORD

  # Compile and load software
  scl:
    - apax build
    - apax load

  # Compile and load hardware
  hcl:
    - apax hwcompile
    - apax hwdownload

  fill:
    - apax mod --targetIP $IP_ADDRESS  --certificate ./certificate/reference_x509.crt --username MyUser --password Siemens1! --symbol "tank.inputValve.cOpenPercent" --value 10
  stopFill:
    - apax mod --targetIP $IP_ADDRESS  --certificate ./certificate/reference_x509.crt --username MyUser --password Siemens1! --symbol "tank.inputValve.cOpenPercent" --value 0
  empty:
    - apax mod --targetIP $IP_ADDRESS  --certificate ./certificate/reference_x509.crt --username MyUser --password Siemens1! --symbol "tank.outputValve.cOpenPercent" --value 20
  stopEmpty:
    - apax mod --targetIP $IP_ADDRESS  --certificate ./certificate/reference_x509.crt --username MyUser --password Siemens1! --symbol "tank.outputValve.cOpenPercent" --value 0

  # Monitor from server side

  monitor:
    - apax mon --targetIP $IP_ADDRESS --certificate ./certificate/reference_x509.crt --username MyUser --password Siemens1! --file ./watchlist/myWatchTable.mon --continuously
